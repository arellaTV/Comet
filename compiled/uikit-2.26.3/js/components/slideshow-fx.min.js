"use strict";

/*! UIkit 2.26.3 | http://www.getuikit.com | (c) 2014 YOOtheme | MIT License */
!function (i) {
  var t;window.UIkit && (t = i(UIkit)), "function" == typeof define && define.amd && define("uikit-slideshow-fx", ["uikit"], function () {
    return t || i(UIkit);
  });
}(function (i) {
  "use strict";
  var t = i.slideshow.animations;i.$.extend(i.slideshow.animations, { slice: function slice(e, s, n, o) {
      if (!e.data("cover")) return t.fade.apply(this, arguments);for (var r, a = i.$.Deferred(), c = Math.ceil(this.element.width() / this.options.slices), h = s.data("cover").css("background-image"), d = i.$("<li></li>").css({ top: 0, left: 0, width: this.container.width(), height: this.container.height(), opacity: 1, zIndex: 15 }), p = d.width(), l = d.height(), u = "slice-up" == o ? l : "0", f = 0; f < this.options.slices; f++) {
        "slice-up-down" == o && (u = (f % 2 + 2) % 2 == 0 ? "0" : l);var m,
            x = f == this.options.slices - 1 ? c : c,
            v = "rect(0px, " + x * (f + 1) + "px, " + l + "px, " + c * f + "px)";m = "rect(0px, " + x * (f + 1) + "px, 0px, " + c * f + "px)", ("slice-up" == o || "slice-up-down" == o && (f % 2 + 2) % 2 == 0) && (m = "rect(" + l + "px, " + x * (f + 1) + "px, " + l + "px, " + c * f + "px)"), r = i.$('<div class="uk-cover-background"></div>').css({ position: "absolute", top: 0, left: 0, width: p, height: l, "background-image": h, clip: m, opacity: 0, transition: "all " + this.options.duration + "ms ease-in-out " + 60 * f + "ms", "-webkit-transition": "all " + this.options.duration + "ms ease-in-out " + 60 * f + "ms" }).data("clip", v), d.append(r);
      }return this.container.append(d), d.children().last().on(i.support.transition.end, function () {
        d.remove(), a.resolve();
      }), d.width(), d.children().each(function () {
        var t = i.$(this);t.css({ clip: t.data("clip"), opacity: 1 });
      }), a.promise();
    }, "slice-up": function sliceUp(i, e, s) {
      return t.slice.apply(this, [i, e, s, "slice-up"]);
    }, "slice-down": function sliceDown(i, e, s) {
      return t.slice.apply(this, [i, e, s, "slice-down"]);
    }, "slice-up-down": function sliceUpDown(i, e, s) {
      return t.slice.apply(this, [i, e, s, "slice-up-down"]);
    }, fold: function fold(e, s) {
      if (!s.data("cover")) return t.fade.apply(this, arguments);for (var n, o = i.$.Deferred(), r = Math.ceil(this.element.width() / this.options.slices), a = s.data("cover").css("background-image"), c = i.$("<li></li>").css({ width: s.width(), height: s.height(), opacity: 1, zIndex: 15 }), h = s.width(), d = s.height(), p = 0; p < this.options.slices; p++) {
        n = i.$('<div class="uk-cover-background"></div>').css({ position: "absolute", top: 0, left: 0, width: h, height: d, "background-image": a, "transform-origin": r * p + "px 0 0", clip: "rect(0px, " + r * (p + 1) + "px, " + d + "px, " + r * p + "px)", opacity: 0, transform: "scaleX(0.000001)", transition: "all " + this.options.duration + "ms ease-in-out " + (100 + 60 * p) + "ms", "-webkit-transition": "all " + this.options.duration + "ms ease-in-out " + (100 + 60 * p) + "ms" }), c.prepend(n);
      }return this.container.append(c), c.width(), c.children().first().on(i.support.transition.end, function () {
        c.remove(), o.resolve();
      }).end().css({ transform: "scaleX(1)", opacity: 1 }), o.promise();
    }, puzzle: function puzzle(s, n) {
      if (!n.data("cover")) return t.fade.apply(this, arguments);for (var o, r, a, c = i.$.Deferred(), h = this, d = Math.round(this.options.slices / 2), p = Math.round(n.width() / d), l = Math.round(n.height() / p), u = Math.round(n.height() / l) + 1, f = n.data("cover").css("background-image"), m = i.$("<li></li>").css({ width: this.container.width(), height: this.container.height(), opacity: 1, zIndex: 15 }), x = this.container.width(), v = this.container.height(), g = 0; l > g; g++) {
        for (var w = 0; d > w; w++) {
          a = w == d - 1 ? p + 2 : p, r = [u * g + "px", a * (w + 1) + "px", u * (g + 1) + "px", p * w + "px"], o = i.$('<div class="uk-cover-background"></div>').css({ position: "absolute", top: 0, left: 0, opacity: 0, width: x, height: v, "background-image": f, clip: "rect(" + r.join(",") + ")", "-webkit-transform": "translateZ(0)", transform: "translateZ(0)" }), m.append(o);
        }
      }this.container.append(m);var b = e(m.children());return b.each(function (t) {
        i.$(this).css({ transition: "all " + h.options.duration + "ms ease-in-out " + (50 + 25 * t) + "ms", "-webkit-transition": "all " + h.options.duration + "ms ease-in-out " + (50 + 25 * t) + "ms" });
      }).last().on(i.support.transition.end, function () {
        m.remove(), c.resolve();
      }), m.width(), b.css({ opacity: 1 }), c.promise();
    }, boxes: function boxes(e, s, n, o) {
      if (!s.data("cover")) return t.fade.apply(this, arguments);for (var r, a, c, h, d = i.$.Deferred(), p = Math.round(this.options.slices / 2), l = Math.round(s.width() / p), u = Math.round(s.height() / l), f = Math.round(s.height() / u) + 1, m = s.data("cover").css("background-image"), x = i.$("<li></li>").css({ width: s.width(), height: s.height(), opacity: 1, zIndex: 15 }), v = s.width(), g = s.height(), w = 0; u > w; w++) {
        for (h = 0; p > h; h++) {
          c = h == p - 1 ? l + 2 : l, a = [f * w + "px", c * (h + 1) + "px", f * (w + 1) + "px", l * h + "px"], r = i.$('<div class="uk-cover-background"></div>').css({ position: "absolute", top: 0, left: 0, opacity: 1, width: v, height: g, "background-image": m, "transform-origin": a[3] + " " + a[0] + " 0", clip: "rect(" + a.join(",") + ")", "-webkit-transform": "scale(0.0000000000000001)", transform: "scale(0.0000000000000001)" }), x.append(r);
        }
      }this.container.append(x);var b,
          k = 0,
          y = 0,
          $ = 0,
          I = [[]],
          M = x.children();for ("boxes-reverse" == o && (M = [].reverse.apply(M)), M.each(function () {
        I[k][y] = i.$(this), y++, y == p && (k++, y = 0, I[k] = []);
      }), h = 0, b = 0; p * u > h; h++) {
        b = h;for (var z = 0; u > z; z++) {
          b >= 0 && p > b && I[z][b].css({ transition: "all " + this.options.duration + "ms linear " + (50 + $) + "ms", "-webkit-transition": "all " + this.options.duration + "ms linear " + (50 + $) + "ms" }), b--;
        }$ += 100;
      }return M.last().on(i.support.transition.end, function () {
        x.remove(), d.resolve();
      }), x.width(), M.css({ "-webkit-transform": "scale(1)", transform: "scale(1)" }), d.promise();
    }, "boxes-reverse": function boxesReverse(i, e, s) {
      return t.boxes.apply(this, [i, e, s, "boxes-reverse"]);
    }, "random-fx": function randomFx() {
      var i = ["slice-up", "fold", "puzzle", "slice-down", "boxes", "slice-up-down", "boxes-reverse"];return this.fxIndex = (void 0 === this.fxIndex ? -1 : this.fxIndex) + 1, i[this.fxIndex] || (this.fxIndex = 0), t[i[this.fxIndex]].apply(this, arguments);
    } });var e = function e(i) {
    for (var t, e, s = i.length; s; t = parseInt(Math.random() * s), e = i[--s], i[s] = i[t], i[t] = e) {}return i;
  };return i.slideshow.animations;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Vpa2l0LTIuMjYuMy9qcy9jb21wb25lbnRzL3NsaWRlc2hvdy1meC5taW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsQ0FBQyxVQUFTLENBQVQsRUFBVztBQUFDLE1BQUksQ0FBSixDQUFNLE9BQU8sS0FBUCxLQUFlLElBQUUsRUFBRSxLQUFGLENBQWpCLEdBQTJCLGNBQVksT0FBTyxNQUFuQixJQUEyQixPQUFPLEdBQWxDLElBQXVDLE9BQU8sb0JBQVAsRUFBNEIsQ0FBQyxPQUFELENBQTVCLEVBQXNDLFlBQVU7QUFBQyxXQUFPLEtBQUcsRUFBRSxLQUFGLENBQVY7QUFBbUIsR0FBcEUsQ0FBbEU7QUFBd0ksQ0FBMUosQ0FBMkosVUFBUyxDQUFULEVBQVc7QUFBQztBQUFhLE1BQUksSUFBRSxFQUFFLFNBQUYsQ0FBWSxVQUFsQixDQUE2QixFQUFFLENBQUYsQ0FBSSxNQUFKLENBQVcsRUFBRSxTQUFGLENBQVksVUFBdkIsRUFBa0MsRUFBQyxPQUFNLGVBQVMsQ0FBVCxFQUFXLENBQVgsRUFBYSxDQUFiLEVBQWUsQ0FBZixFQUFpQjtBQUFDLFVBQUcsQ0FBQyxFQUFFLElBQUYsQ0FBTyxPQUFQLENBQUosRUFBb0IsT0FBTyxFQUFFLElBQUYsQ0FBTyxLQUFQLENBQWEsSUFBYixFQUFrQixTQUFsQixDQUFQLENBQW9DLEtBQUksSUFBSSxDQUFKLEVBQU0sSUFBRSxFQUFFLENBQUYsQ0FBSSxRQUFKLEVBQVIsRUFBdUIsSUFBRSxLQUFLLElBQUwsQ0FBVSxLQUFLLE9BQUwsQ0FBYSxLQUFiLEtBQXFCLEtBQUssT0FBTCxDQUFhLE1BQTVDLENBQXpCLEVBQTZFLElBQUUsRUFBRSxJQUFGLENBQU8sT0FBUCxFQUFnQixHQUFoQixDQUFvQixrQkFBcEIsQ0FBL0UsRUFBdUgsSUFBRSxFQUFFLENBQUYsQ0FBSSxXQUFKLEVBQWlCLEdBQWpCLENBQXFCLEVBQUMsS0FBSSxDQUFMLEVBQU8sTUFBSyxDQUFaLEVBQWMsT0FB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QUFFLEtBQUYsQ0FBUSxLQUFSLENBQWMsSUFBZCxFQUFtQixDQUFDLENBQUQsRUFBRyxDQUFILEVBQUssQ0FBTCxFQUFPLGVBQVAsQ0FBbkIsQ0FBUDtBQUFtRCxLQUF6MEosRUFBMDBKLGFBQVksb0JBQVU7QUFBQyxVQUFJLElBQUUsQ0FBQyxVQUFELEVBQVksTUFBWixFQUFtQixRQUFuQixFQUE0QixZQUE1QixFQUF5QyxPQUF6QyxFQUFpRCxlQUFqRCxFQUFpRSxlQUFqRSxDQUFOLENBQXdGLE9BQU8sS0FBSyxPQUFMLEdBQWEsQ0FBQyxLQUFLLENBQUwsS0FBUyxLQUFLLE9BQWQsR0FBc0IsQ0FBQyxDQUF2QixHQUF5QixLQUFLLE9BQS9CLElBQXdDLENBQXJELEVBQXVELEVBQUUsS0FBSyxPQUFQLE1BQWtCLEtBQUssT0FBTCxHQUFhLENBQS9CLENBQXZELEVBQXlGLEVBQUUsRUFBRSxLQUFLLE9BQVAsQ0FBRixFQUFtQixLQUFuQixDQUF5QixJQUF6QixFQUE4QixTQUE5QixDQUFoRztBQUF5SSxLQUFsa0ssRUFBbEMsRUFBdW1LLElBQUksSUFBRSxXQUFTLENBQVQsRUFBVztBQUFDLFNBQUksSUFBSSxDQUFKLEVBQU0sQ0FBTixFQUFRLElBQUUsRUFBRSxNQUFoQixFQUF1QixDQUF2QixFQUF5QixJQUFFLFNBQVMsS0FBSyxNQUFMLEtBQWMsQ0FBdkIsQ0FBRixFQUE0QixJQUFFLEVBQUUsRUFBRSxDQUFKLENBQTlCLEVBQXFDLEVBQUUsQ0FBRixJQUFLLEVBQUUsQ0FBRixDQUExQyxFQUErQyxFQUFFLENBQUYsSUFBSyxDQUE3RSxJQUFnRixPQUFPLENBQVA7QUFBUyxHQUEzRyxDQUE0RyxPQUFPLEVBQUUsU0FBRixDQUFZLFVBQW5CO0FBQThCLENBQWw4SyxDQUFEIiwiZmlsZSI6InNsaWRlc2hvdy1meC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgVUlraXQgMi4yNi4zIHwgaHR0cDovL3d3dy5nZXR1aWtpdC5jb20gfCAoYykgMjAxNCBZT090aGVtZSB8IE1JVCBMaWNlbnNlICovXG4hZnVuY3Rpb24oaSl7dmFyIHQ7d2luZG93LlVJa2l0JiYodD1pKFVJa2l0KSksXCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kJiZkZWZpbmUoXCJ1aWtpdC1zbGlkZXNob3ctZnhcIixbXCJ1aWtpdFwiXSxmdW5jdGlvbigpe3JldHVybiB0fHxpKFVJa2l0KX0pfShmdW5jdGlvbihpKXtcInVzZSBzdHJpY3RcIjt2YXIgdD1pLnNsaWRlc2hvdy5hbmltYXRpb25zO2kuJC5leHRlbmQoaS5zbGlkZXNob3cuYW5pbWF0aW9ucyx7c2xpY2U6ZnVuY3Rpb24oZSxzLG4sbyl7aWYoIWUuZGF0YShcImNvdmVyXCIpKXJldHVybiB0LmZhZGUuYXBwbHkodGhpcyxhcmd1bWVudHMpO2Zvcih2YXIgcixhPWkuJC5EZWZlcnJlZCgpLGM9TWF0aC5jZWlsKHRoaXMuZWxlbWVudC53aWR0aCgpL3RoaXMub3B0aW9ucy5zbGljZXMpLGg9cy5kYXRhKFwiY292ZXJcIikuY3NzKFwiYmFja2dyb3VuZC1pbWFnZVwiKSxkPWkuJChcIjxsaT48L2xpPlwiKS5jc3Moe3RvcDowLGxlZnQ6MCx3aWR0aDp0aGlzLmNvbnRhaW5lci53aWR0aCgpLGhlaWdodDp0aGlzLmNvbnRhaW5lci5oZWlnaHQoKSxvcGFjaXR5OjEsekluZGV4OjE1fSkscD1kLndpZHRoKCksbD1kLmhlaWdodCgpLHU9XCJzbGljZS11cFwiPT1vP2w6XCIwXCIsZj0wO2Y8dGhpcy5vcHRpb25zLnNsaWNlcztmKyspe1wic2xpY2UtdXAtZG93blwiPT1vJiYodT0oZiUyKzIpJTI9PTA/XCIwXCI6bCk7dmFyIG0seD1mPT10aGlzLm9wdGlvbnMuc2xpY2VzLTE/YzpjLHY9XCJyZWN0KDBweCwgXCIreCooZisxKStcInB4LCBcIitsK1wicHgsIFwiK2MqZitcInB4KVwiO209XCJyZWN0KDBweCwgXCIreCooZisxKStcInB4LCAwcHgsIFwiK2MqZitcInB4KVwiLChcInNsaWNlLXVwXCI9PW98fFwic2xpY2UtdXAtZG93blwiPT1vJiYoZiUyKzIpJTI9PTApJiYobT1cInJlY3QoXCIrbCtcInB4LCBcIit4KihmKzEpK1wicHgsIFwiK2wrXCJweCwgXCIrYypmK1wicHgpXCIpLHI9aS4kKCc8ZGl2IGNsYXNzPVwidWstY292ZXItYmFja2dyb3VuZFwiPjwvZGl2PicpLmNzcyh7cG9zaXRpb246XCJhYnNvbHV0ZVwiLHRvcDowLGxlZnQ6MCx3aWR0aDpwLGhlaWdodDpsLFwiYmFja2dyb3VuZC1pbWFnZVwiOmgsY2xpcDptLG9wYWNpdHk6MCx0cmFuc2l0aW9uOlwiYWxsIFwiK3RoaXMub3B0aW9ucy5kdXJhdGlvbitcIm1zIGVhc2UtaW4tb3V0IFwiKzYwKmYrXCJtc1wiLFwiLXdlYmtpdC10cmFuc2l0aW9uXCI6XCJhbGwgXCIrdGhpcy5vcHRpb25zLmR1cmF0aW9uK1wibXMgZWFzZS1pbi1vdXQgXCIrNjAqZitcIm1zXCJ9KS5kYXRhKFwiY2xpcFwiLHYpLGQuYXBwZW5kKHIpfXJldHVybiB0aGlzLmNvbnRhaW5lci5hcHBlbmQoZCksZC5jaGlsZHJlbigpLmxhc3QoKS5vbihpLnN1cHBvcnQudHJhbnNpdGlvbi5lbmQsZnVuY3Rpb24oKXtkLnJlbW92ZSgpLGEucmVzb2x2ZSgpfSksZC53aWR0aCgpLGQuY2hpbGRyZW4oKS5lYWNoKGZ1bmN0aW9uKCl7dmFyIHQ9aS4kKHRoaXMpO3QuY3NzKHtjbGlwOnQuZGF0YShcImNsaXBcIiksb3BhY2l0eToxfSl9KSxhLnByb21pc2UoKX0sXCJzbGljZS11cFwiOmZ1bmN0aW9uKGksZSxzKXtyZXR1cm4gdC5zbGljZS5hcHBseSh0aGlzLFtpLGUscyxcInNsaWNlLXVwXCJdKX0sXCJzbGljZS1kb3duXCI6ZnVuY3Rpb24oaSxlLHMpe3JldHVybiB0LnNsaWNlLmFwcGx5KHRoaXMsW2ksZSxzLFwic2xpY2UtZG93blwiXSl9LFwic2xpY2UtdXAtZG93blwiOmZ1bmN0aW9uKGksZSxzKXtyZXR1cm4gdC5zbGljZS5hcHBseSh0aGlzLFtpLGUscyxcInNsaWNlLXVwLWRvd25cIl0pfSxmb2xkOmZ1bmN0aW9uKGUscyl7aWYoIXMuZGF0YShcImNvdmVyXCIpKXJldHVybiB0LmZhZGUuYXBwbHkodGhpcyxhcmd1bWVudHMpO2Zvcih2YXIgbixvPWkuJC5EZWZlcnJlZCgpLHI9TWF0aC5jZWlsKHRoaXMuZWxlbWVudC53aWR0aCgpL3RoaXMub3B0aW9ucy5zbGljZXMpLGE9cy5kYXRhKFwiY292ZXJcIikuY3NzKFwiYmFja2dyb3VuZC1pbWFnZVwiKSxjPWkuJChcIjxsaT48L2xpPlwiKS5jc3Moe3dpZHRoOnMud2lkdGgoKSxoZWlnaHQ6cy5oZWlnaHQoKSxvcGFjaXR5OjEsekluZGV4OjE1fSksaD1zLndpZHRoKCksZD1zLmhlaWdodCgpLHA9MDtwPHRoaXMub3B0aW9ucy5zbGljZXM7cCsrKW49aS4kKCc8ZGl2IGNsYXNzPVwidWstY292ZXItYmFja2dyb3VuZFwiPjwvZGl2PicpLmNzcyh7cG9zaXRpb246XCJhYnNvbHV0ZVwiLHRvcDowLGxlZnQ6MCx3aWR0aDpoLGhlaWdodDpkLFwiYmFja2dyb3VuZC1pbWFnZVwiOmEsXCJ0cmFuc2Zvcm0tb3JpZ2luXCI6cipwK1wicHggMCAwXCIsY2xpcDpcInJlY3QoMHB4LCBcIityKihwKzEpK1wicHgsIFwiK2QrXCJweCwgXCIrcipwK1wicHgpXCIsb3BhY2l0eTowLHRyYW5zZm9ybTpcInNjYWxlWCgwLjAwMDAwMSlcIix0cmFuc2l0aW9uOlwiYWxsIFwiK3RoaXMub3B0aW9ucy5kdXJhdGlvbitcIm1zIGVhc2UtaW4tb3V0IFwiKygxMDArNjAqcCkrXCJtc1wiLFwiLXdlYmtpdC10cmFuc2l0aW9uXCI6XCJhbGwgXCIrdGhpcy5vcHRpb25zLmR1cmF0aW9uK1wibXMgZWFzZS1pbi1vdXQgXCIrKDEwMCs2MCpwKStcIm1zXCJ9KSxjLnByZXBlbmQobik7cmV0dXJuIHRoaXMuY29udGFpbmVyLmFwcGVuZChjKSxjLndpZHRoKCksYy5jaGlsZHJlbigpLmZpcnN0KCkub24oaS5zdXBwb3J0LnRyYW5zaXRpb24uZW5kLGZ1bmN0aW9uKCl7Yy5yZW1vdmUoKSxvLnJlc29sdmUoKX0pLmVuZCgpLmNzcyh7dHJhbnNmb3JtOlwic2NhbGVYKDEpXCIsb3BhY2l0eToxfSksby5wcm9taXNlKCl9LHB1enpsZTpmdW5jdGlvbihzLG4pe2lmKCFuLmRhdGEoXCJjb3ZlclwiKSlyZXR1cm4gdC5mYWRlLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtmb3IodmFyIG8scixhLGM9aS4kLkRlZmVycmVkKCksaD10aGlzLGQ9TWF0aC5yb3VuZCh0aGlzLm9wdGlvbnMuc2xpY2VzLzIpLHA9TWF0aC5yb3VuZChuLndpZHRoKCkvZCksbD1NYXRoLnJvdW5kKG4uaGVpZ2h0KCkvcCksdT1NYXRoLnJvdW5kKG4uaGVpZ2h0KCkvbCkrMSxmPW4uZGF0YShcImNvdmVyXCIpLmNzcyhcImJhY2tncm91bmQtaW1hZ2VcIiksbT1pLiQoXCI8bGk+PC9saT5cIikuY3NzKHt3aWR0aDp0aGlzLmNvbnRhaW5lci53aWR0aCgpLGhlaWdodDp0aGlzLmNvbnRhaW5lci5oZWlnaHQoKSxvcGFjaXR5OjEsekluZGV4OjE1fSkseD10aGlzLmNvbnRhaW5lci53aWR0aCgpLHY9dGhpcy5jb250YWluZXIuaGVpZ2h0KCksZz0wO2w+ZztnKyspZm9yKHZhciB3PTA7ZD53O3crKylhPXc9PWQtMT9wKzI6cCxyPVt1KmcrXCJweFwiLGEqKHcrMSkrXCJweFwiLHUqKGcrMSkrXCJweFwiLHAqdytcInB4XCJdLG89aS4kKCc8ZGl2IGNsYXNzPVwidWstY292ZXItYmFja2dyb3VuZFwiPjwvZGl2PicpLmNzcyh7cG9zaXRpb246XCJhYnNvbHV0ZVwiLHRvcDowLGxlZnQ6MCxvcGFjaXR5OjAsd2lkdGg6eCxoZWlnaHQ6dixcImJhY2tncm91bmQtaW1hZ2VcIjpmLGNsaXA6XCJyZWN0KFwiK3Iuam9pbihcIixcIikrXCIpXCIsXCItd2Via2l0LXRyYW5zZm9ybVwiOlwidHJhbnNsYXRlWigwKVwiLHRyYW5zZm9ybTpcInRyYW5zbGF0ZVooMClcIn0pLG0uYXBwZW5kKG8pO3RoaXMuY29udGFpbmVyLmFwcGVuZChtKTt2YXIgYj1lKG0uY2hpbGRyZW4oKSk7cmV0dXJuIGIuZWFjaChmdW5jdGlvbih0KXtpLiQodGhpcykuY3NzKHt0cmFuc2l0aW9uOlwiYWxsIFwiK2gub3B0aW9ucy5kdXJhdGlvbitcIm1zIGVhc2UtaW4tb3V0IFwiKyg1MCsyNSp0KStcIm1zXCIsXCItd2Via2l0LXRyYW5zaXRpb25cIjpcImFsbCBcIitoLm9wdGlvbnMuZHVyYXRpb24rXCJtcyBlYXNlLWluLW91dCBcIisoNTArMjUqdCkrXCJtc1wifSl9KS5sYXN0KCkub24oaS5zdXBwb3J0LnRyYW5zaXRpb24uZW5kLGZ1bmN0aW9uKCl7bS5yZW1vdmUoKSxjLnJlc29sdmUoKX0pLG0ud2lkdGgoKSxiLmNzcyh7b3BhY2l0eToxfSksYy5wcm9taXNlKCl9LGJveGVzOmZ1bmN0aW9uKGUscyxuLG8pe2lmKCFzLmRhdGEoXCJjb3ZlclwiKSlyZXR1cm4gdC5mYWRlLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtmb3IodmFyIHIsYSxjLGgsZD1pLiQuRGVmZXJyZWQoKSxwPU1hdGgucm91bmQodGhpcy5vcHRpb25zLnNsaWNlcy8yKSxsPU1hdGgucm91bmQocy53aWR0aCgpL3ApLHU9TWF0aC5yb3VuZChzLmhlaWdodCgpL2wpLGY9TWF0aC5yb3VuZChzLmhlaWdodCgpL3UpKzEsbT1zLmRhdGEoXCJjb3ZlclwiKS5jc3MoXCJiYWNrZ3JvdW5kLWltYWdlXCIpLHg9aS4kKFwiPGxpPjwvbGk+XCIpLmNzcyh7d2lkdGg6cy53aWR0aCgpLGhlaWdodDpzLmhlaWdodCgpLG9wYWNpdHk6MSx6SW5kZXg6MTV9KSx2PXMud2lkdGgoKSxnPXMuaGVpZ2h0KCksdz0wO3U+dzt3KyspZm9yKGg9MDtwPmg7aCsrKWM9aD09cC0xP2wrMjpsLGE9W2YqdytcInB4XCIsYyooaCsxKStcInB4XCIsZioodysxKStcInB4XCIsbCpoK1wicHhcIl0scj1pLiQoJzxkaXYgY2xhc3M9XCJ1ay1jb3Zlci1iYWNrZ3JvdW5kXCI+PC9kaXY+JykuY3NzKHtwb3NpdGlvbjpcImFic29sdXRlXCIsdG9wOjAsbGVmdDowLG9wYWNpdHk6MSx3aWR0aDp2LGhlaWdodDpnLFwiYmFja2dyb3VuZC1pbWFnZVwiOm0sXCJ0cmFuc2Zvcm0tb3JpZ2luXCI6YVszXStcIiBcIithWzBdK1wiIDBcIixjbGlwOlwicmVjdChcIithLmpvaW4oXCIsXCIpK1wiKVwiLFwiLXdlYmtpdC10cmFuc2Zvcm1cIjpcInNjYWxlKDAuMDAwMDAwMDAwMDAwMDAwMSlcIix0cmFuc2Zvcm06XCJzY2FsZSgwLjAwMDAwMDAwMDAwMDAwMDEpXCJ9KSx4LmFwcGVuZChyKTt0aGlzLmNvbnRhaW5lci5hcHBlbmQoeCk7dmFyIGIsaz0wLHk9MCwkPTAsST1bW11dLE09eC5jaGlsZHJlbigpO2ZvcihcImJveGVzLXJldmVyc2VcIj09byYmKE09W10ucmV2ZXJzZS5hcHBseShNKSksTS5lYWNoKGZ1bmN0aW9uKCl7SVtrXVt5XT1pLiQodGhpcykseSsrLHk9PXAmJihrKysseT0wLElba109W10pfSksaD0wLGI9MDtwKnU+aDtoKyspe2I9aDtmb3IodmFyIHo9MDt1Pno7eisrKWI+PTAmJnA+YiYmSVt6XVtiXS5jc3Moe3RyYW5zaXRpb246XCJhbGwgXCIrdGhpcy5vcHRpb25zLmR1cmF0aW9uK1wibXMgbGluZWFyIFwiKyg1MCskKStcIm1zXCIsXCItd2Via2l0LXRyYW5zaXRpb25cIjpcImFsbCBcIit0aGlzLm9wdGlvbnMuZHVyYXRpb24rXCJtcyBsaW5lYXIgXCIrKDUwKyQpK1wibXNcIn0pLGItLTskKz0xMDB9cmV0dXJuIE0ubGFzdCgpLm9uKGkuc3VwcG9ydC50cmFuc2l0aW9uLmVuZCxmdW5jdGlvbigpe3gucmVtb3ZlKCksZC5yZXNvbHZlKCl9KSx4LndpZHRoKCksTS5jc3Moe1wiLXdlYmtpdC10cmFuc2Zvcm1cIjpcInNjYWxlKDEpXCIsdHJhbnNmb3JtOlwic2NhbGUoMSlcIn0pLGQucHJvbWlzZSgpfSxcImJveGVzLXJldmVyc2VcIjpmdW5jdGlvbihpLGUscyl7cmV0dXJuIHQuYm94ZXMuYXBwbHkodGhpcyxbaSxlLHMsXCJib3hlcy1yZXZlcnNlXCJdKX0sXCJyYW5kb20tZnhcIjpmdW5jdGlvbigpe3ZhciBpPVtcInNsaWNlLXVwXCIsXCJmb2xkXCIsXCJwdXp6bGVcIixcInNsaWNlLWRvd25cIixcImJveGVzXCIsXCJzbGljZS11cC1kb3duXCIsXCJib3hlcy1yZXZlcnNlXCJdO3JldHVybiB0aGlzLmZ4SW5kZXg9KHZvaWQgMD09PXRoaXMuZnhJbmRleD8tMTp0aGlzLmZ4SW5kZXgpKzEsaVt0aGlzLmZ4SW5kZXhdfHwodGhpcy5meEluZGV4PTApLHRbaVt0aGlzLmZ4SW5kZXhdXS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fSk7dmFyIGU9ZnVuY3Rpb24oaSl7Zm9yKHZhciB0LGUscz1pLmxlbmd0aDtzO3Q9cGFyc2VJbnQoTWF0aC5yYW5kb20oKSpzKSxlPWlbLS1zXSxpW3NdPWlbdF0saVt0XT1lKTtyZXR1cm4gaX07cmV0dXJuIGkuc2xpZGVzaG93LmFuaW1hdGlvbnN9KTsiXX0=