"use strict";

/*! UIkit 2.26.3 | http://www.getuikit.com | (c) 2014 YOOtheme | MIT License */
!function (e) {
  var t;window.UIkit && (t = e(UIkit)), "function" == typeof define && define.amd && define("uikit-upload", ["uikit"], function () {
    return t || e(UIkit);
  });
}(function (e) {
  "use strict";
  function t(o, a) {
    function r(t, n) {
      var o = new FormData(),
          a = new XMLHttpRequest();if (n.before(n, t) !== !1) {
        for (var r, i = 0; r = t[i]; i++) {
          o.append(n.param, r);
        }for (var l in n.params) {
          o.append(l, n.params[l]);
        }a.upload.addEventListener("progress", function (e) {
          var t = e.loaded / e.total * 100;n.progress(t, e);
        }, !1), a.addEventListener("loadstart", function (e) {
          n.loadstart(e);
        }, !1), a.addEventListener("load", function (e) {
          n.load(e);
        }, !1), a.addEventListener("loadend", function (e) {
          n.loadend(e);
        }, !1), a.addEventListener("error", function (e) {
          n.error(e);
        }, !1), a.addEventListener("abort", function (e) {
          n.abort(e);
        }, !1), a.open(n.method, n.action, !0), "json" == n.type && a.setRequestHeader("Accept", "application/json"), a.onreadystatechange = function () {
          if (n.readystatechange(a), 4 == a.readyState) {
            var t = a.responseText;if ("json" == n.type) try {
              t = e.$.parseJSON(t);
            } catch (o) {
              t = !1;
            }n.complete(t, a);
          }
        }, n.beforeSend(a), a.send(o);
      }
    }if (!e.support.ajaxupload) return this;if (a = e.$.extend({}, t.defaults, a), o.length) {
      if ("*.*" !== a.allow) for (var i, l = 0; i = o[l]; l++) {
        if (!n(a.allow, i.name)) return "string" == typeof a.notallowed ? alert(a.notallowed) : a.notallowed(i, a), void 0;
      }var s = a.complete;if (a.single) {
        var d = o.length,
            f = 0,
            p = !0;a.beforeAll(o), a.complete = function (e, t) {
          f += 1, s(e, t), a.filelimit && f >= a.filelimit && (p = !1), p && d > f ? r([o[f]], a) : a.allcomplete(e, t);
        }, r([o[0]], a);
      } else a.complete = function (e, t) {
        s(e, t), a.allcomplete(e, t);
      }, r(o, a);
    }
  }function n(e, t) {
    var n = "^" + e.replace(/\//g, "\\/").replace(/\*\*/g, "(\\/[^\\/]+)*").replace(/\*/g, "[^\\/]+").replace(/((?!\\))\?/g, "$1.") + "$";return n = "^" + n + "$", null !== t.match(new RegExp(n, "i"));
  }return e.component("uploadSelect", { init: function init() {
      var e = this;this.on("change", function () {
        t(e.element[0].files, e.options);var n = e.element.clone(!0).data("uploadSelect", e);e.element.replaceWith(n), e.element = n;
      });
    } }), e.component("uploadDrop", { defaults: { dragoverClass: "uk-dragover" }, init: function init() {
      var e = this,
          n = !1;this.on("drop", function (n) {
        n.dataTransfer && n.dataTransfer.files && (n.stopPropagation(), n.preventDefault(), e.element.removeClass(e.options.dragoverClass), e.element.trigger("dropped.uk.upload", [n.dataTransfer.files]), t(n.dataTransfer.files, e.options));
      }).on("dragenter", function (e) {
        e.stopPropagation(), e.preventDefault();
      }).on("dragover", function (t) {
        t.stopPropagation(), t.preventDefault(), n || (e.element.addClass(e.options.dragoverClass), n = !0);
      }).on("dragleave", function (t) {
        t.stopPropagation(), t.preventDefault(), e.element.removeClass(e.options.dragoverClass), n = !1;
      });
    } }), e.support.ajaxupload = function () {
    function e() {
      var e = document.createElement("INPUT");return e.type = "file", "files" in e;
    }function t() {
      var e = new XMLHttpRequest();return !!(e && "upload" in e && "onprogress" in e.upload);
    }function n() {
      return !!window.FormData;
    }return e() && t() && n();
  }(), e.support.ajaxupload && e.$.event.props.push("dataTransfer"), t.defaults = { action: "", single: !0, method: "POST", param: "files[]", params: {}, allow: "*.*", type: "text", filelimit: !1, before: function before() {}, beforeSend: function beforeSend() {}, beforeAll: function beforeAll() {}, loadstart: function loadstart() {}, load: function load() {}, loadend: function loadend() {}, error: function error() {}, abort: function abort() {}, progress: function progress() {}, complete: function complete() {}, allcomplete: function allcomplete() {}, readystatechange: function readystatechange() {}, notallowed: function notallowed(e, t) {
      alert("Only the following file types are allowed: " + t.allow);
    } }, e.Utils.xhrupload = t, t;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Vpa2l0LTIuMjYuMy9qcy9jb21wb25lbnRzL3VwbG9hZC5taW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsQ0FBQyxVQUFTLENBQVQsRUFBVztBQUFDLE1BQUksQ0FBSixDQUFNLE9BQU8sS0FBUCxLQUFlLElBQUUsRUFBRSxLQUFGLENBQWpCLEdBQTJCLGNBQVksT0FBTyxNQUFuQixJQUEyQixPQUFPLEdBQWxDLElBQXVDLE9BQU8sY0FBUCxFQUFzQixDQUFDLE9BQUQsQ0FBdEIsRUFBZ0MsWUFBVTtBQUFDLFdBQU8sS0FBRyxFQUFFLEtBQUYsQ0FBVjtBQUFtQixHQUE5RCxDQUFsRTtBQUFrSSxDQUFwSixDQUFxSixVQUFTLENBQVQsRUFBVztBQUFDO0FBQWEsV0FBUyxDQUFULENBQVcsQ0FBWCxFQUFhLENBQWIsRUFBZTtBQUFDLGFBQVMsQ0FBVCxDQUFXLENBQVgsRUFBYSxDQUFiLEVBQWU7QUFBQyxVQUFJLElBQUUsSUFBSSxRQUFKLEVBQU47QUFBQSxVQUFtQixJQUFFLElBQUksY0FBSixFQUFyQixDQUF3QyxJQUFHLEVBQUUsTUFBRixDQUFTLENBQVQsRUFBVyxDQUFYLE1BQWdCLENBQUMsQ0FBcEIsRUFBc0I7QUFBQyxhQUFJLElBQUksQ0FBSixFQUFNLElBQUUsQ0FBWixFQUFjLElBQUUsRUFBRSxDQUFGLENBQWhCLEVBQXFCLEdBQXJCO0FBQXlCLFlBQUUsTUFBRixDQUFTLEVBQUUsS0FBWCxFQUFpQixDQUFqQjtBQUF6QixTQUE2QyxLQUFJLElBQUksQ0FBUixJQUFhLEVBQUUsTUFBZjtBQUFzQixZQUFFLE1BQUYsQ0FBUyxDQUFULEVBQVcsRUFBRSxNQUFGLENBQVMsQ0FBVCxDQUFYO0FBQXRCLFNBQThDLEVBQUUsTUFBRixDQUFTLGdCQUFULENBQTBCLFVBQTFCLEVBQXFDLFVBQVMsQ0FBVCxFQUFXO0FBQUMsY0FBSSxJQUFFLEVBQUUsTUFBRixHQUFTLEVBQUUsS0FBWCxHQUFpQixHQUF2QixD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LEVBQThJLFdBQVUscUJBQVUsQ0FBRSxDQUFwSyxFQUFxSyxXQUFVLHFCQUFVLENBQUUsQ0FBM0wsRUFBNEwsTUFBSyxnQkFBVSxDQUFFLENBQTdNLEVBQThNLFNBQVEsbUJBQVUsQ0FBRSxDQUFsTyxFQUFtTyxPQUFNLGlCQUFVLENBQUUsQ0FBclAsRUFBc1AsT0FBTSxpQkFBVSxDQUFFLENBQXhRLEVBQXlRLFVBQVMsb0JBQVUsQ0FBRSxDQUE5UixFQUErUixVQUFTLG9CQUFVLENBQUUsQ0FBcFQsRUFBcVQsYUFBWSx1QkFBVSxDQUFFLENBQTdVLEVBQThVLGtCQUFpQiw0QkFBVSxDQUFFLENBQTNXLEVBQTRXLFlBQVcsb0JBQVMsQ0FBVCxFQUFXLENBQVgsRUFBYTtBQUFDLFlBQU0sZ0RBQThDLEVBQUUsS0FBdEQ7QUFBNkQsS0FBbGMsRUFBbHJDLEVBQXNuRCxFQUFFLEtBQUYsQ0FBUSxTQUFSLEdBQWtCLENBQXhvRCxFQUEwb0QsQ0FBanBEO0FBQW1wRCxDQUEvekcsQ0FBRCIsImZpbGUiOiJ1cGxvYWQubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohIFVJa2l0IDIuMjYuMyB8IGh0dHA6Ly93d3cuZ2V0dWlraXQuY29tIHwgKGMpIDIwMTQgWU9PdGhlbWUgfCBNSVQgTGljZW5zZSAqL1xuIWZ1bmN0aW9uKGUpe3ZhciB0O3dpbmRvdy5VSWtpdCYmKHQ9ZShVSWtpdCkpLFwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZCYmZGVmaW5lKFwidWlraXQtdXBsb2FkXCIsW1widWlraXRcIl0sZnVuY3Rpb24oKXtyZXR1cm4gdHx8ZShVSWtpdCl9KX0oZnVuY3Rpb24oZSl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gdChvLGEpe2Z1bmN0aW9uIHIodCxuKXt2YXIgbz1uZXcgRm9ybURhdGEsYT1uZXcgWE1MSHR0cFJlcXVlc3Q7aWYobi5iZWZvcmUobix0KSE9PSExKXtmb3IodmFyIHIsaT0wO3I9dFtpXTtpKyspby5hcHBlbmQobi5wYXJhbSxyKTtmb3IodmFyIGwgaW4gbi5wYXJhbXMpby5hcHBlbmQobCxuLnBhcmFtc1tsXSk7YS51cGxvYWQuYWRkRXZlbnRMaXN0ZW5lcihcInByb2dyZXNzXCIsZnVuY3Rpb24oZSl7dmFyIHQ9ZS5sb2FkZWQvZS50b3RhbCoxMDA7bi5wcm9ncmVzcyh0LGUpfSwhMSksYS5hZGRFdmVudExpc3RlbmVyKFwibG9hZHN0YXJ0XCIsZnVuY3Rpb24oZSl7bi5sb2Fkc3RhcnQoZSl9LCExKSxhLmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsZnVuY3Rpb24oZSl7bi5sb2FkKGUpfSwhMSksYS5hZGRFdmVudExpc3RlbmVyKFwibG9hZGVuZFwiLGZ1bmN0aW9uKGUpe24ubG9hZGVuZChlKX0sITEpLGEuYWRkRXZlbnRMaXN0ZW5lcihcImVycm9yXCIsZnVuY3Rpb24oZSl7bi5lcnJvcihlKX0sITEpLGEuYWRkRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsZnVuY3Rpb24oZSl7bi5hYm9ydChlKX0sITEpLGEub3BlbihuLm1ldGhvZCxuLmFjdGlvbiwhMCksXCJqc29uXCI9PW4udHlwZSYmYS5zZXRSZXF1ZXN0SGVhZGVyKFwiQWNjZXB0XCIsXCJhcHBsaWNhdGlvbi9qc29uXCIpLGEub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKCl7aWYobi5yZWFkeXN0YXRlY2hhbmdlKGEpLDQ9PWEucmVhZHlTdGF0ZSl7dmFyIHQ9YS5yZXNwb25zZVRleHQ7aWYoXCJqc29uXCI9PW4udHlwZSl0cnl7dD1lLiQucGFyc2VKU09OKHQpfWNhdGNoKG8pe3Q9ITF9bi5jb21wbGV0ZSh0LGEpfX0sbi5iZWZvcmVTZW5kKGEpLGEuc2VuZChvKX19aWYoIWUuc3VwcG9ydC5hamF4dXBsb2FkKXJldHVybiB0aGlzO2lmKGE9ZS4kLmV4dGVuZCh7fSx0LmRlZmF1bHRzLGEpLG8ubGVuZ3RoKXtpZihcIiouKlwiIT09YS5hbGxvdylmb3IodmFyIGksbD0wO2k9b1tsXTtsKyspaWYoIW4oYS5hbGxvdyxpLm5hbWUpKXJldHVyblwic3RyaW5nXCI9PXR5cGVvZiBhLm5vdGFsbG93ZWQ/YWxlcnQoYS5ub3RhbGxvd2VkKTphLm5vdGFsbG93ZWQoaSxhKSx2b2lkIDA7dmFyIHM9YS5jb21wbGV0ZTtpZihhLnNpbmdsZSl7dmFyIGQ9by5sZW5ndGgsZj0wLHA9ITA7YS5iZWZvcmVBbGwobyksYS5jb21wbGV0ZT1mdW5jdGlvbihlLHQpe2YrPTEscyhlLHQpLGEuZmlsZWxpbWl0JiZmPj1hLmZpbGVsaW1pdCYmKHA9ITEpLHAmJmQ+Zj9yKFtvW2ZdXSxhKTphLmFsbGNvbXBsZXRlKGUsdCl9LHIoW29bMF1dLGEpfWVsc2UgYS5jb21wbGV0ZT1mdW5jdGlvbihlLHQpe3MoZSx0KSxhLmFsbGNvbXBsZXRlKGUsdCl9LHIobyxhKX19ZnVuY3Rpb24gbihlLHQpe3ZhciBuPVwiXlwiK2UucmVwbGFjZSgvXFwvL2csXCJcXFxcL1wiKS5yZXBsYWNlKC9cXCpcXCovZyxcIihcXFxcL1teXFxcXC9dKykqXCIpLnJlcGxhY2UoL1xcKi9nLFwiW15cXFxcL10rXCIpLnJlcGxhY2UoLygoPyFcXFxcKSlcXD8vZyxcIiQxLlwiKStcIiRcIjtyZXR1cm4gbj1cIl5cIituK1wiJFwiLG51bGwhPT10Lm1hdGNoKG5ldyBSZWdFeHAobixcImlcIikpfXJldHVybiBlLmNvbXBvbmVudChcInVwbG9hZFNlbGVjdFwiLHtpbml0OmZ1bmN0aW9uKCl7dmFyIGU9dGhpczt0aGlzLm9uKFwiY2hhbmdlXCIsZnVuY3Rpb24oKXt0KGUuZWxlbWVudFswXS5maWxlcyxlLm9wdGlvbnMpO3ZhciBuPWUuZWxlbWVudC5jbG9uZSghMCkuZGF0YShcInVwbG9hZFNlbGVjdFwiLGUpO2UuZWxlbWVudC5yZXBsYWNlV2l0aChuKSxlLmVsZW1lbnQ9bn0pfX0pLGUuY29tcG9uZW50KFwidXBsb2FkRHJvcFwiLHtkZWZhdWx0czp7ZHJhZ292ZXJDbGFzczpcInVrLWRyYWdvdmVyXCJ9LGluaXQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLG49ITE7dGhpcy5vbihcImRyb3BcIixmdW5jdGlvbihuKXtuLmRhdGFUcmFuc2ZlciYmbi5kYXRhVHJhbnNmZXIuZmlsZXMmJihuLnN0b3BQcm9wYWdhdGlvbigpLG4ucHJldmVudERlZmF1bHQoKSxlLmVsZW1lbnQucmVtb3ZlQ2xhc3MoZS5vcHRpb25zLmRyYWdvdmVyQ2xhc3MpLGUuZWxlbWVudC50cmlnZ2VyKFwiZHJvcHBlZC51ay51cGxvYWRcIixbbi5kYXRhVHJhbnNmZXIuZmlsZXNdKSx0KG4uZGF0YVRyYW5zZmVyLmZpbGVzLGUub3B0aW9ucykpfSkub24oXCJkcmFnZW50ZXJcIixmdW5jdGlvbihlKXtlLnN0b3BQcm9wYWdhdGlvbigpLGUucHJldmVudERlZmF1bHQoKX0pLm9uKFwiZHJhZ292ZXJcIixmdW5jdGlvbih0KXt0LnN0b3BQcm9wYWdhdGlvbigpLHQucHJldmVudERlZmF1bHQoKSxufHwoZS5lbGVtZW50LmFkZENsYXNzKGUub3B0aW9ucy5kcmFnb3ZlckNsYXNzKSxuPSEwKX0pLm9uKFwiZHJhZ2xlYXZlXCIsZnVuY3Rpb24odCl7dC5zdG9wUHJvcGFnYXRpb24oKSx0LnByZXZlbnREZWZhdWx0KCksZS5lbGVtZW50LnJlbW92ZUNsYXNzKGUub3B0aW9ucy5kcmFnb3ZlckNsYXNzKSxuPSExfSl9fSksZS5zdXBwb3J0LmFqYXh1cGxvYWQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKCl7dmFyIGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIklOUFVUXCIpO3JldHVybiBlLnR5cGU9XCJmaWxlXCIsXCJmaWxlc1wiaW4gZX1mdW5jdGlvbiB0KCl7dmFyIGU9bmV3IFhNTEh0dHBSZXF1ZXN0O3JldHVybiEhKGUmJlwidXBsb2FkXCJpbiBlJiZcIm9ucHJvZ3Jlc3NcImluIGUudXBsb2FkKX1mdW5jdGlvbiBuKCl7cmV0dXJuISF3aW5kb3cuRm9ybURhdGF9cmV0dXJuIGUoKSYmdCgpJiZuKCl9KCksZS5zdXBwb3J0LmFqYXh1cGxvYWQmJmUuJC5ldmVudC5wcm9wcy5wdXNoKFwiZGF0YVRyYW5zZmVyXCIpLHQuZGVmYXVsdHM9e2FjdGlvbjpcIlwiLHNpbmdsZTohMCxtZXRob2Q6XCJQT1NUXCIscGFyYW06XCJmaWxlc1tdXCIscGFyYW1zOnt9LGFsbG93OlwiKi4qXCIsdHlwZTpcInRleHRcIixmaWxlbGltaXQ6ITEsYmVmb3JlOmZ1bmN0aW9uKCl7fSxiZWZvcmVTZW5kOmZ1bmN0aW9uKCl7fSxiZWZvcmVBbGw6ZnVuY3Rpb24oKXt9LGxvYWRzdGFydDpmdW5jdGlvbigpe30sbG9hZDpmdW5jdGlvbigpe30sbG9hZGVuZDpmdW5jdGlvbigpe30sZXJyb3I6ZnVuY3Rpb24oKXt9LGFib3J0OmZ1bmN0aW9uKCl7fSxwcm9ncmVzczpmdW5jdGlvbigpe30sY29tcGxldGU6ZnVuY3Rpb24oKXt9LGFsbGNvbXBsZXRlOmZ1bmN0aW9uKCl7fSxyZWFkeXN0YXRlY2hhbmdlOmZ1bmN0aW9uKCl7fSxub3RhbGxvd2VkOmZ1bmN0aW9uKGUsdCl7YWxlcnQoXCJPbmx5IHRoZSBmb2xsb3dpbmcgZmlsZSB0eXBlcyBhcmUgYWxsb3dlZDogXCIrdC5hbGxvdyl9fSxlLlV0aWxzLnhocnVwbG9hZD10LHR9KTsiXX0=