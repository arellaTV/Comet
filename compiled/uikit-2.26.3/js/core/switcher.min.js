"use strict";

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

/*! UIkit 2.26.3 | http://www.getuikit.com | (c) 2014 YOOtheme | MIT License */
!function (i) {
  "use strict";
  function t(t, n, e) {
    var s,
        a = i.$.Deferred(),
        o = t,
        r = t;return e[0] === n[0] ? (a.resolve(), a.promise()) : ("object" == (typeof t === "undefined" ? "undefined" : _typeof(t)) && (o = t[0], r = t[1] || t[0]), i.$body.css("overflow-x", "hidden"), s = function s() {
      n && n.hide().removeClass("uk-active " + r + " uk-animation-reverse"), e.addClass(o).one(i.support.animation.end, function () {
        e.removeClass("" + o).css({ opacity: "", display: "" }), a.resolve(), i.$body.css("overflow-x", ""), n && n.css({ opacity: "", display: "" });
      }.bind(this)).show();
    }, e.css("animation-duration", this.options.duration + "ms"), n && n.length ? (n.css("animation-duration", this.options.duration + "ms"), n.css("display", "none").addClass(r + " uk-animation-reverse").one(i.support.animation.end, function () {
      s();
    }.bind(this)).css("display", "")) : (e.addClass("uk-active"), s()), a.promise());
  }var n;i.component("switcher", { defaults: { connect: !1, toggle: ">*", active: 0, animation: !1, duration: 200, swiping: !0 }, animating: !1, boot: function boot() {
      i.ready(function (t) {
        i.$("[data-uk-switcher]", t).each(function () {
          var t = i.$(this);if (!t.data("switcher")) {
            i.switcher(t, i.Utils.options(t.attr("data-uk-switcher")));
          }
        });
      });
    }, init: function init() {
      var t = this;if (this.on("click.uk.switcher", this.options.toggle, function (i) {
        i.preventDefault(), t.show(this);
      }), this.options.connect) {
        this.connect = i.$(this.options.connect), this.connect.children().removeClass("uk-active"), this.connect.length && (this.connect.children().attr("aria-hidden", "true"), this.connect.on("click", "[data-uk-switcher-item]", function (n) {
          n.preventDefault();var e = i.$(this).attr("data-uk-switcher-item");if (t.index != e) switch (e) {case "next":case "previous":
              t.show(t.index + ("next" == e ? 1 : -1));break;default:
              t.show(parseInt(e, 10));}
        }), this.options.swiping && this.connect.on("swipeRight swipeLeft", function (i) {
          i.preventDefault(), window.getSelection().toString() || t.show(t.index + ("swipeLeft" == i.type ? 1 : -1));
        }));var n = this.find(this.options.toggle),
            e = n.filter(".uk-active");if (e.length) this.show(e, !1);else {
          if (this.options.active === !1) return;e = n.eq(this.options.active), this.show(e.length ? e : n.eq(0), !1);
        }n.not(e).attr("aria-expanded", "false"), e.attr("aria-expanded", "true");
      }
    }, show: function show(e, s) {
      if (!this.animating) {
        if (isNaN(e)) e = i.$(e);else {
          var a = this.find(this.options.toggle);e = 0 > e ? a.length - 1 : e, e = a.eq(a[e] ? e : 0);
        }var o = this,
            a = this.find(this.options.toggle),
            r = i.$(e),
            c = n[this.options.animation] || function (i, e) {
          if (!o.options.animation) return n.none.apply(o);var s = o.options.animation.split(",");return 1 == s.length && (s[1] = s[0]), s[0] = s[0].trim(), s[1] = s[1].trim(), t.apply(o, [s, i, e]);
        };s !== !1 && i.support.animation || (c = n.none), r.hasClass("uk-disabled") || (a.attr("aria-expanded", "false"), r.attr("aria-expanded", "true"), a.filter(".uk-active").removeClass("uk-active"), r.addClass("uk-active"), this.options.connect && this.connect.length && (this.index = this.find(this.options.toggle).index(r), -1 == this.index && (this.index = 0), this.connect.each(function () {
          var t = i.$(this),
              n = i.$(t.children()),
              e = i.$(n.filter(".uk-active")),
              s = i.$(n.eq(o.index));o.animating = !0, c.apply(o, [e, s]).then(function () {
            e.removeClass("uk-active"), s.addClass("uk-active"), e.attr("aria-hidden", "true"), s.attr("aria-hidden", "false"), i.Utils.checkDisplay(s, !0), o.animating = !1;
          });
        })), this.trigger("show.uk.switcher", [r]));
      }
    } }), n = { none: function none() {
      var t = i.$.Deferred();return t.resolve(), t.promise();
    }, fade: function fade(i, n) {
      return t.apply(this, ["uk-animation-fade", i, n]);
    }, "slide-bottom": function slideBottom(i, n) {
      return t.apply(this, ["uk-animation-slide-bottom", i, n]);
    }, "slide-top": function slideTop(i, n) {
      return t.apply(this, ["uk-animation-slide-top", i, n]);
    }, "slide-vertical": function slideVertical(i, n) {
      var e = ["uk-animation-slide-top", "uk-animation-slide-bottom"];return i && i.index() > n.index() && e.reverse(), t.apply(this, [e, i, n]);
    }, "slide-left": function slideLeft(i, n) {
      return t.apply(this, ["uk-animation-slide-left", i, n]);
    }, "slide-right": function slideRight(i, n) {
      return t.apply(this, ["uk-animation-slide-right", i, n]);
    }, "slide-horizontal": function slideHorizontal(i, n) {
      var e = ["uk-animation-slide-right", "uk-animation-slide-left"];return i && i.index() > n.index() && e.reverse(), t.apply(this, [e, i, n]);
    }, scale: function scale(i, n) {
      return t.apply(this, ["uk-animation-scale-up", i, n]);
    } }, i.switcher.animations = n;
}(UIkit);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Vpa2l0LTIuMjYuMy9qcy9jb3JlL3N3aXRjaGVyLm1pbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUNBLENBQUMsVUFBUyxDQUFULEVBQVc7QUFBQztBQUFhLFdBQVMsQ0FBVCxDQUFXLENBQVgsRUFBYSxDQUFiLEVBQWUsQ0FBZixFQUFpQjtBQUFDLFFBQUksQ0FBSjtBQUFBLFFBQU0sSUFBRSxFQUFFLENBQUYsQ0FBSSxRQUFKLEVBQVI7QUFBQSxRQUF1QixJQUFFLENBQXpCO0FBQUEsUUFBMkIsSUFBRSxDQUE3QixDQUErQixPQUFPLEVBQUUsQ0FBRixNQUFPLEVBQUUsQ0FBRixDQUFQLElBQWEsRUFBRSxPQUFGLElBQVksRUFBRSxPQUFGLEVBQXpCLEtBQXVDLG9CQUFpQixDQUFqQix5Q0FBaUIsQ0FBakIsT0FBcUIsSUFBRSxFQUFFLENBQUYsQ0FBRixFQUFPLElBQUUsRUFBRSxDQUFGLEtBQU0sRUFBRSxDQUFGLENBQXBDLEdBQTBDLEVBQUUsS0FBRixDQUFRLEdBQVIsQ0FBWSxZQUFaLEVBQXlCLFFBQXpCLENBQTFDLEVBQTZFLElBQUUsYUFBVTtBQUFDLFdBQUcsRUFBRSxJQUFGLEdBQVMsV0FBVCxDQUFxQixlQUFhLENBQWIsR0FBZSx1QkFBcEMsQ0FBSCxFQUFnRSxFQUFFLFFBQUYsQ0FBVyxDQUFYLEVBQWMsR0FBZCxDQUFrQixFQUFFLE9BQUYsQ0FBVSxTQUFWLENBQW9CLEdBQXRDLEVBQTBDLFlBQVU7QUFBQyxVQUFFLFdBQUYsQ0FBYyxLQUFHLENBQWpCLEVBQW9CLEdBQXBCLENBQXdCLEVBQUMsU0FBUSxFQUFULEVBQVksU0FBUSxFQUFwQixFQUF4QixHQUFpRCxFQUFFLE9BQUYsRUFBakQsRUFBNkQsRUFBRSxLQUFGLENBQVEsR0FBUixDQUFZLFlBQVosRUFBeUIsRUFBekIsQ0FBN0QsRUFBMEYsS0FBRyxFQUFFLEdBQUYsQ0FBTSxFQUFDLFNBQVEsRUFBVCxFQUFZLFNBQVEsRUFBcEIsRUFB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QWIsQ0FBM0M7QUFBaUUsS0FBMWMsRUFBMmMsY0FBYSxtQkFBUyxDQUFULEVBQVcsQ0FBWCxFQUFhO0FBQUMsYUFBTyxFQUFFLEtBQUYsQ0FBUSxJQUFSLEVBQWEsQ0FBQyx5QkFBRCxFQUEyQixDQUEzQixFQUE2QixDQUE3QixDQUFiLENBQVA7QUFBcUQsS0FBM2hCLEVBQTRoQixlQUFjLG9CQUFTLENBQVQsRUFBVyxDQUFYLEVBQWE7QUFBQyxhQUFPLEVBQUUsS0FBRixDQUFRLElBQVIsRUFBYSxDQUFDLDBCQUFELEVBQTRCLENBQTVCLEVBQThCLENBQTlCLENBQWIsQ0FBUDtBQUFzRCxLQUE5bUIsRUFBK21CLG9CQUFtQix5QkFBUyxDQUFULEVBQVcsQ0FBWCxFQUFhO0FBQUMsVUFBSSxJQUFFLENBQUMsMEJBQUQsRUFBNEIseUJBQTVCLENBQU4sQ0FBNkQsT0FBTyxLQUFHLEVBQUUsS0FBRixLQUFVLEVBQUUsS0FBRixFQUFiLElBQXdCLEVBQUUsT0FBRixFQUF4QixFQUFvQyxFQUFFLEtBQUYsQ0FBUSxJQUFSLEVBQWEsQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLENBQUwsQ0FBYixDQUEzQztBQUFpRSxLQUE5d0IsRUFBK3dCLE9BQU0sZUFBUyxDQUFULEVBQVcsQ0FBWCxFQUFhO0FBQUMsYUFBTyxFQUFFLEtBQUYsQ0FBUSxJQUFSLEVBQWEsQ0FBQyx1QkFBRCxFQUF5QixDQUF6QixFQUEyQixDQUEzQixDQUFiLENBQVA7QUFBbUQsS0FBdDFCLEVBQXYxRSxFQUErcUcsRUFBRSxRQUFGLENBQVcsVUFBWCxHQUFzQixDQUFyc0c7QUFBdXNHLENBQWw5SCxDQUFtOUgsS0FBbjlILENBQUQiLCJmaWxlIjoic3dpdGNoZXIubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohIFVJa2l0IDIuMjYuMyB8IGh0dHA6Ly93d3cuZ2V0dWlraXQuY29tIHwgKGMpIDIwMTQgWU9PdGhlbWUgfCBNSVQgTGljZW5zZSAqL1xuIWZ1bmN0aW9uKGkpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHQodCxuLGUpe3ZhciBzLGE9aS4kLkRlZmVycmVkKCksbz10LHI9dDtyZXR1cm4gZVswXT09PW5bMF0/KGEucmVzb2x2ZSgpLGEucHJvbWlzZSgpKTooXCJvYmplY3RcIj09dHlwZW9mIHQmJihvPXRbMF0scj10WzFdfHx0WzBdKSxpLiRib2R5LmNzcyhcIm92ZXJmbG93LXhcIixcImhpZGRlblwiKSxzPWZ1bmN0aW9uKCl7biYmbi5oaWRlKCkucmVtb3ZlQ2xhc3MoXCJ1ay1hY3RpdmUgXCIrcitcIiB1ay1hbmltYXRpb24tcmV2ZXJzZVwiKSxlLmFkZENsYXNzKG8pLm9uZShpLnN1cHBvcnQuYW5pbWF0aW9uLmVuZCxmdW5jdGlvbigpe2UucmVtb3ZlQ2xhc3MoXCJcIitvKS5jc3Moe29wYWNpdHk6XCJcIixkaXNwbGF5OlwiXCJ9KSxhLnJlc29sdmUoKSxpLiRib2R5LmNzcyhcIm92ZXJmbG93LXhcIixcIlwiKSxuJiZuLmNzcyh7b3BhY2l0eTpcIlwiLGRpc3BsYXk6XCJcIn0pfS5iaW5kKHRoaXMpKS5zaG93KCl9LGUuY3NzKFwiYW5pbWF0aW9uLWR1cmF0aW9uXCIsdGhpcy5vcHRpb25zLmR1cmF0aW9uK1wibXNcIiksbiYmbi5sZW5ndGg/KG4uY3NzKFwiYW5pbWF0aW9uLWR1cmF0aW9uXCIsdGhpcy5vcHRpb25zLmR1cmF0aW9uK1wibXNcIiksbi5jc3MoXCJkaXNwbGF5XCIsXCJub25lXCIpLmFkZENsYXNzKHIrXCIgdWstYW5pbWF0aW9uLXJldmVyc2VcIikub25lKGkuc3VwcG9ydC5hbmltYXRpb24uZW5kLGZ1bmN0aW9uKCl7cygpfS5iaW5kKHRoaXMpKS5jc3MoXCJkaXNwbGF5XCIsXCJcIikpOihlLmFkZENsYXNzKFwidWstYWN0aXZlXCIpLHMoKSksYS5wcm9taXNlKCkpfXZhciBuO2kuY29tcG9uZW50KFwic3dpdGNoZXJcIix7ZGVmYXVsdHM6e2Nvbm5lY3Q6ITEsdG9nZ2xlOlwiPipcIixhY3RpdmU6MCxhbmltYXRpb246ITEsZHVyYXRpb246MjAwLHN3aXBpbmc6ITB9LGFuaW1hdGluZzohMSxib290OmZ1bmN0aW9uKCl7aS5yZWFkeShmdW5jdGlvbih0KXtpLiQoXCJbZGF0YS11ay1zd2l0Y2hlcl1cIix0KS5lYWNoKGZ1bmN0aW9uKCl7dmFyIHQ9aS4kKHRoaXMpO2lmKCF0LmRhdGEoXCJzd2l0Y2hlclwiKSl7aS5zd2l0Y2hlcih0LGkuVXRpbHMub3B0aW9ucyh0LmF0dHIoXCJkYXRhLXVrLXN3aXRjaGVyXCIpKSl9fSl9KX0saW5pdDpmdW5jdGlvbigpe3ZhciB0PXRoaXM7aWYodGhpcy5vbihcImNsaWNrLnVrLnN3aXRjaGVyXCIsdGhpcy5vcHRpb25zLnRvZ2dsZSxmdW5jdGlvbihpKXtpLnByZXZlbnREZWZhdWx0KCksdC5zaG93KHRoaXMpfSksdGhpcy5vcHRpb25zLmNvbm5lY3Qpe3RoaXMuY29ubmVjdD1pLiQodGhpcy5vcHRpb25zLmNvbm5lY3QpLHRoaXMuY29ubmVjdC5jaGlsZHJlbigpLnJlbW92ZUNsYXNzKFwidWstYWN0aXZlXCIpLHRoaXMuY29ubmVjdC5sZW5ndGgmJih0aGlzLmNvbm5lY3QuY2hpbGRyZW4oKS5hdHRyKFwiYXJpYS1oaWRkZW5cIixcInRydWVcIiksdGhpcy5jb25uZWN0Lm9uKFwiY2xpY2tcIixcIltkYXRhLXVrLXN3aXRjaGVyLWl0ZW1dXCIsZnVuY3Rpb24obil7bi5wcmV2ZW50RGVmYXVsdCgpO3ZhciBlPWkuJCh0aGlzKS5hdHRyKFwiZGF0YS11ay1zd2l0Y2hlci1pdGVtXCIpO2lmKHQuaW5kZXghPWUpc3dpdGNoKGUpe2Nhc2VcIm5leHRcIjpjYXNlXCJwcmV2aW91c1wiOnQuc2hvdyh0LmluZGV4KyhcIm5leHRcIj09ZT8xOi0xKSk7YnJlYWs7ZGVmYXVsdDp0LnNob3cocGFyc2VJbnQoZSwxMCkpfX0pLHRoaXMub3B0aW9ucy5zd2lwaW5nJiZ0aGlzLmNvbm5lY3Qub24oXCJzd2lwZVJpZ2h0IHN3aXBlTGVmdFwiLGZ1bmN0aW9uKGkpe2kucHJldmVudERlZmF1bHQoKSx3aW5kb3cuZ2V0U2VsZWN0aW9uKCkudG9TdHJpbmcoKXx8dC5zaG93KHQuaW5kZXgrKFwic3dpcGVMZWZ0XCI9PWkudHlwZT8xOi0xKSl9KSk7dmFyIG49dGhpcy5maW5kKHRoaXMub3B0aW9ucy50b2dnbGUpLGU9bi5maWx0ZXIoXCIudWstYWN0aXZlXCIpO2lmKGUubGVuZ3RoKXRoaXMuc2hvdyhlLCExKTtlbHNle2lmKHRoaXMub3B0aW9ucy5hY3RpdmU9PT0hMSlyZXR1cm47ZT1uLmVxKHRoaXMub3B0aW9ucy5hY3RpdmUpLHRoaXMuc2hvdyhlLmxlbmd0aD9lOm4uZXEoMCksITEpfW4ubm90KGUpLmF0dHIoXCJhcmlhLWV4cGFuZGVkXCIsXCJmYWxzZVwiKSxlLmF0dHIoXCJhcmlhLWV4cGFuZGVkXCIsXCJ0cnVlXCIpfX0sc2hvdzpmdW5jdGlvbihlLHMpe2lmKCF0aGlzLmFuaW1hdGluZyl7aWYoaXNOYU4oZSkpZT1pLiQoZSk7ZWxzZXt2YXIgYT10aGlzLmZpbmQodGhpcy5vcHRpb25zLnRvZ2dsZSk7ZT0wPmU/YS5sZW5ndGgtMTplLGU9YS5lcShhW2VdP2U6MCl9dmFyIG89dGhpcyxhPXRoaXMuZmluZCh0aGlzLm9wdGlvbnMudG9nZ2xlKSxyPWkuJChlKSxjPW5bdGhpcy5vcHRpb25zLmFuaW1hdGlvbl18fGZ1bmN0aW9uKGksZSl7aWYoIW8ub3B0aW9ucy5hbmltYXRpb24pcmV0dXJuIG4ubm9uZS5hcHBseShvKTt2YXIgcz1vLm9wdGlvbnMuYW5pbWF0aW9uLnNwbGl0KFwiLFwiKTtyZXR1cm4gMT09cy5sZW5ndGgmJihzWzFdPXNbMF0pLHNbMF09c1swXS50cmltKCksc1sxXT1zWzFdLnRyaW0oKSx0LmFwcGx5KG8sW3MsaSxlXSl9O3MhPT0hMSYmaS5zdXBwb3J0LmFuaW1hdGlvbnx8KGM9bi5ub25lKSxyLmhhc0NsYXNzKFwidWstZGlzYWJsZWRcIil8fChhLmF0dHIoXCJhcmlhLWV4cGFuZGVkXCIsXCJmYWxzZVwiKSxyLmF0dHIoXCJhcmlhLWV4cGFuZGVkXCIsXCJ0cnVlXCIpLGEuZmlsdGVyKFwiLnVrLWFjdGl2ZVwiKS5yZW1vdmVDbGFzcyhcInVrLWFjdGl2ZVwiKSxyLmFkZENsYXNzKFwidWstYWN0aXZlXCIpLHRoaXMub3B0aW9ucy5jb25uZWN0JiZ0aGlzLmNvbm5lY3QubGVuZ3RoJiYodGhpcy5pbmRleD10aGlzLmZpbmQodGhpcy5vcHRpb25zLnRvZ2dsZSkuaW5kZXgociksLTE9PXRoaXMuaW5kZXgmJih0aGlzLmluZGV4PTApLHRoaXMuY29ubmVjdC5lYWNoKGZ1bmN0aW9uKCl7dmFyIHQ9aS4kKHRoaXMpLG49aS4kKHQuY2hpbGRyZW4oKSksZT1pLiQobi5maWx0ZXIoXCIudWstYWN0aXZlXCIpKSxzPWkuJChuLmVxKG8uaW5kZXgpKTtvLmFuaW1hdGluZz0hMCxjLmFwcGx5KG8sW2Usc10pLnRoZW4oZnVuY3Rpb24oKXtlLnJlbW92ZUNsYXNzKFwidWstYWN0aXZlXCIpLHMuYWRkQ2xhc3MoXCJ1ay1hY3RpdmVcIiksZS5hdHRyKFwiYXJpYS1oaWRkZW5cIixcInRydWVcIikscy5hdHRyKFwiYXJpYS1oaWRkZW5cIixcImZhbHNlXCIpLGkuVXRpbHMuY2hlY2tEaXNwbGF5KHMsITApLG8uYW5pbWF0aW5nPSExfSl9KSksdGhpcy50cmlnZ2VyKFwic2hvdy51ay5zd2l0Y2hlclwiLFtyXSkpfX19KSxuPXtub25lOmZ1bmN0aW9uKCl7dmFyIHQ9aS4kLkRlZmVycmVkKCk7cmV0dXJuIHQucmVzb2x2ZSgpLHQucHJvbWlzZSgpfSxmYWRlOmZ1bmN0aW9uKGksbil7cmV0dXJuIHQuYXBwbHkodGhpcyxbXCJ1ay1hbmltYXRpb24tZmFkZVwiLGksbl0pfSxcInNsaWRlLWJvdHRvbVwiOmZ1bmN0aW9uKGksbil7cmV0dXJuIHQuYXBwbHkodGhpcyxbXCJ1ay1hbmltYXRpb24tc2xpZGUtYm90dG9tXCIsaSxuXSl9LFwic2xpZGUtdG9wXCI6ZnVuY3Rpb24oaSxuKXtyZXR1cm4gdC5hcHBseSh0aGlzLFtcInVrLWFuaW1hdGlvbi1zbGlkZS10b3BcIixpLG5dKX0sXCJzbGlkZS12ZXJ0aWNhbFwiOmZ1bmN0aW9uKGksbil7dmFyIGU9W1widWstYW5pbWF0aW9uLXNsaWRlLXRvcFwiLFwidWstYW5pbWF0aW9uLXNsaWRlLWJvdHRvbVwiXTtyZXR1cm4gaSYmaS5pbmRleCgpPm4uaW5kZXgoKSYmZS5yZXZlcnNlKCksdC5hcHBseSh0aGlzLFtlLGksbl0pfSxcInNsaWRlLWxlZnRcIjpmdW5jdGlvbihpLG4pe3JldHVybiB0LmFwcGx5KHRoaXMsW1widWstYW5pbWF0aW9uLXNsaWRlLWxlZnRcIixpLG5dKX0sXCJzbGlkZS1yaWdodFwiOmZ1bmN0aW9uKGksbil7cmV0dXJuIHQuYXBwbHkodGhpcyxbXCJ1ay1hbmltYXRpb24tc2xpZGUtcmlnaHRcIixpLG5dKX0sXCJzbGlkZS1ob3Jpem9udGFsXCI6ZnVuY3Rpb24oaSxuKXt2YXIgZT1bXCJ1ay1hbmltYXRpb24tc2xpZGUtcmlnaHRcIixcInVrLWFuaW1hdGlvbi1zbGlkZS1sZWZ0XCJdO3JldHVybiBpJiZpLmluZGV4KCk+bi5pbmRleCgpJiZlLnJldmVyc2UoKSx0LmFwcGx5KHRoaXMsW2UsaSxuXSl9LHNjYWxlOmZ1bmN0aW9uKGksbil7cmV0dXJuIHQuYXBwbHkodGhpcyxbXCJ1ay1hbmltYXRpb24tc2NhbGUtdXBcIixpLG5dKX19LGkuc3dpdGNoZXIuYW5pbWF0aW9ucz1ufShVSWtpdCk7Il19